openapi: 3.0.2
info:
  title: Monolithic API POC
  version: 1.0.0
  description: Monolithic API POC
paths:
  /channels:
    summary: channels
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
        required: true
      responses:
        '200':
          description: '200'
  '/channels/{channelId}':
    parameters:
      -
        name: channelId
        in: path
        required: true
  /videos:
    summary: videos
    servers:
      -
        url: 'http://localhost:8081'
        description: development
    get:
      tags: []
      parameters:
        -
          name: categories
          description: ''
          schema:
            type: array
            items:
              type: string
          in: query
        -
          name: pageSize
          description: ''
          schema:
            type: integer
          in: query
          required: true
        -
          name: pageNumber
          description: ''
          schema:
            type: integer
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVideoResponse'
          description: '200'
      security:
        -
          token: []
          oAuth2: []
      summary: videos.list
      description: list
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videoRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/videoRequest'
          description: '201'
      security:
        -
          token: []
      summary: videos
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initiateVideo'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/initiateVideo'
          description: created
        '400':
          description: '400'
        '401':
          description: '401'
      security:
        -
          token: []
      summary: videos
  '/videos/{videoId}':
    get:
      parameters:
        -
          name: videoId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/videoRequest'
          description: '200'
      summary: videos
  '/videos/{videoId}/comments':
    summary: videos.comments
    get:
      parameters:
        -
          name: videoId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommentsResponse'
          description: '200'
      summary: videos.comments.list
  '/videos/{videoId}/comments/{commentId}': {}
  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channel'
        required: true
      responses:
        '200':
          description: '200'
  '/users/{userId}': {}
components:
  schemas:
    videoRequest:
      description: ''
      type: object
      allOf:
        -
          required:
            - tumbnails
            - visibility
          type: object
          properties:
            tumbnails:
              description: thumbails
              maxItems: 3
              minItems: 1
              uniqueItems: true
              type: array
              items:
                format: byte
                type: string
            visibility:
              description: ''
              enum:
                - PUBLIC
                - PRIVATE
                - UNLISTED
              type: string
              readOnly: true
        -
          $ref: '#/components/schemas/initiateVideo'
    initiateVideo:
      description: initiate a video
      required:
        - title
        - videoId
        - channelId
      type: object
      properties:
        title:
          description: video
          maxLength: 256
          minLength: 16
          type: string
        videoId:
          description: ''
          type: string
          readOnly: true
        channelId:
          description: ''
          type: string
      example: uuid
    EducationChannel:
      description: ''
      type: object
      allOf:
        -
          required:
            - instituationName
            - registeredAddress
            - website
            - channelType
          type: object
          properties:
            instituationName:
              description: ''
              type: string
            registeredAddress:
              description: ''
              maxLength: 100
              type: string
            website:
              description: ''
              maxLength: 50
              type: string
            channelType:
              description: ''
              type: string
        -
          $ref: '#/components/schemas/videoChannel'
    EntertainmentChannel:
      description: ''
      type: object
      allOf:
        -
          required:
            - address
            - channelType
          type: object
          properties:
            address:
              description: ''
              type: string
            channelType:
              description: ''
              type: string
        -
          $ref: '#/components/schemas/videoChannel'
    channel:
      oneOf:
        -
          $ref: '#/components/schemas/EducationChannel'
        -
          $ref: '#/components/schemas/EntertainmentChannel'
      discriminator:
        propertyName: channelType
      description: ''
      type: object
    videoChannel:
      description: ''
      required:
        - name
        - channelType
      type: object
      properties:
        name:
          description: ''
          type: string
        channelType:
          description: ''
          enum:
            - EDUCATION
            - ENTERTAINMENT
          type: string
    ListVideoResponse:
      description: ''
      required:
        - data
        - PageSize
        - pageNumber
      type: object
      properties:
        data:
          description: requested List
          maxItems: 50
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/videoRequest'
          readOnly: true
        PageSize:
          description: ''
          type: integer
        pageNumber:
          description: ''
          type: integer
      example:
        -
          data:
            - {}
            - {}
          PageSize: 51
          pageNumber: 76
    ListCommentsResponse:
      description: ''
      type: object
  securitySchemes:
    token:
      scheme: bearer
      type: http
    oAuth2:
      flows:
        authorizationCode:
          authorizationUrl: 'http://mysevice/auth'
          tokenUrl: 'http://mysevice/auth1'
          refreshUrl: 'http://mysevice/auth2'
          scopes:
            scope-1: ''
            scope-2: ''
      type: oauth2
